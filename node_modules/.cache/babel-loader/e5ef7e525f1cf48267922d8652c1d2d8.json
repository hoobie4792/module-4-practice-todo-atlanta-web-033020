{"ast":null,"code":"var _jsxFileName = \"/Users/brandonbrown/Documents/Flatiron/code/Module 4/module-4-practice-todo-atlanta-web-033020/src/CategoriesContainer.js\";\nimport React from 'react';\nimport CategoryButton from './CategoryButton';\n\nconst CategoriesContainer = props => {\n  const categoriesMap = categories => categories.map(category => {\n    const categoryButton = {\n      category: category,\n      isSelected: props.selectedCategory === category,\n      setSelectedCategory: props.setSelectedCategory\n    };\n    return /*#__PURE__*/React.createElement(CategoryButton, {\n      key: category,\n      category: category,\n      isSelected: props.selectedCategory === category,\n      setSelectedCategory: props.setSelectedCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    });\n  });\n\n  return categoriesMap(props.categories);\n};\n\nexport default CategoriesContainer;","map":{"version":3,"sources":["/Users/brandonbrown/Documents/Flatiron/code/Module 4/module-4-practice-todo-atlanta-web-033020/src/CategoriesContainer.js"],"names":["React","CategoryButton","CategoriesContainer","props","categoriesMap","categories","map","category","categoryButton","isSelected","selectedCategory","setSelectedCategory"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAEnC,QAAMC,aAAa,GAAGC,UAAU,IAAIA,UAAU,CAACC,GAAX,CAAeC,QAAQ,IAAI;AAC7D,UAAMC,cAAc,GAAG;AACrBD,MAAAA,QAAQ,EAAEA,QADW;AAErBE,MAAAA,UAAU,EAAEN,KAAK,CAACO,gBAAN,KAA2BH,QAFlB;AAGrBI,MAAAA,mBAAmB,EAAER,KAAK,CAACQ;AAHN,KAAvB;AAKA,wBACE,oBAAC,cAAD;AACE,MAAA,GAAG,EAAEJ,QADP;AAEE,MAAA,QAAQ,EAAEA,QAFZ;AAGE,MAAA,UAAU,EAAEJ,KAAK,CAACO,gBAAN,KAA2BH,QAHzC;AAIE,MAAA,mBAAmB,EAAEJ,KAAK,CAACQ,mBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GAdmC,CAApC;;AAgBA,SAAOP,aAAa,CAACD,KAAK,CAACE,UAAP,CAApB;AACD,CAnBD;;AAqBA,eAAeH,mBAAf","sourcesContent":["import React from 'react';\nimport CategoryButton from './CategoryButton';\n\nconst CategoriesContainer = props => {\n\n  const categoriesMap = categories => categories.map(category => {\n    const categoryButton = {\n      category: category,\n      isSelected: props.selectedCategory === category,\n      setSelectedCategory: props.setSelectedCategory\n    }\n    return (\n      <CategoryButton\n        key={category}\n        category={category}\n        isSelected={props.selectedCategory === category}\n        setSelectedCategory={props.setSelectedCategory}\n      />\n    )\n  });\n\n  return categoriesMap(props.categories)\n}\n\nexport default CategoriesContainer;"]},"metadata":{},"sourceType":"module"}