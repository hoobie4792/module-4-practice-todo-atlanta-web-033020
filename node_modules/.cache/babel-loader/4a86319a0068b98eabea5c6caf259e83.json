{"ast":null,"code":"var _jsxFileName = \"/Users/brandonbrown/Documents/Flatiron/code/Module 4/module-4-practice-todo-atlanta-web-033020/src/CategoriesContainer.js\";\nimport React from 'react';\nimport CategoryButton from './CategoryButton';\n\nconst CategoriesContainer = props => {\n  debugger;\n\n  const categoriesMap = categories => categories.map(category => {\n    const categoryButton = {\n      category: category,\n      isSelected: props.selectedCategory === category,\n      setSelectedCategory: props.setSelectedCategory\n    };\n    return /*#__PURE__*/React.createElement(CategoryButton, {\n      key: category,\n      categoryButton: categoryButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    });\n  });\n\n  return categoriesMap(this.props.categories);\n};\n\nexport default CategoriesContainer;","map":{"version":3,"sources":["/Users/brandonbrown/Documents/Flatiron/code/Module 4/module-4-practice-todo-atlanta-web-033020/src/CategoriesContainer.js"],"names":["React","CategoryButton","CategoriesContainer","props","categoriesMap","categories","map","category","categoryButton","isSelected","selectedCategory","setSelectedCategory"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAEnC;;AAEA,QAAMC,aAAa,GAAGC,UAAU,IAAIA,UAAU,CAACC,GAAX,CAAeC,QAAQ,IAAI;AAC7D,UAAMC,cAAc,GAAG;AACrBD,MAAAA,QAAQ,EAAEA,QADW;AAErBE,MAAAA,UAAU,EAAEN,KAAK,CAACO,gBAAN,KAA2BH,QAFlB;AAGrBI,MAAAA,mBAAmB,EAAER,KAAK,CAACQ;AAHN,KAAvB;AAKA,wBAAO,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEJ,QAArB;AAA+B,MAAA,cAAc,EAAEC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAPmC,CAApC;;AASA,SAAOJ,aAAa,CAAC,KAAKD,KAAL,CAAWE,UAAZ,CAApB;AACD,CAdD;;AAgBA,eAAeH,mBAAf","sourcesContent":["import React from 'react';\nimport CategoryButton from './CategoryButton';\n\nconst CategoriesContainer = props => {\n\n  debugger;\n\n  const categoriesMap = categories => categories.map(category => {\n    const categoryButton = {\n      category: category,\n      isSelected: props.selectedCategory === category,\n      setSelectedCategory: props.setSelectedCategory\n    }\n    return <CategoryButton key={category} categoryButton={categoryButton} />\n  });\n\n  return categoriesMap(this.props.categories)\n}\n\nexport default CategoriesContainer;"]},"metadata":{},"sourceType":"module"}